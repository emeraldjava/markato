// Generated by CoffeeScript 1.10.0
(function() {
  canvas;
  var alts, printToken;

  alts = {};

  window.draw = function(location, song, state) {
    var canvas, cstring, i, j, k, len, len1, len2, line, ref, ref1, section, token;
    canvas = $(location);
    alts = song.alts;
    console.log(alts);
    cstring = '';
    cstring += "<div class='panel panel-info'><div class='panel-heading'>" + song.meta.TITLE + "<br/><small>" + song.meta.ARTIST + " - " + song.meta.ALBUM + "</small></div><div class='panel-body'>";
    ref = song.lyrics;
    for (i = 0, len = ref.length; i < len; i++) {
      section = ref[i];
      if (state.showSections) {
        cstring += "<div class='section-header'>" + section.section + "</div><hr/>";
      }
      cstring += "<div class='section'>";
      ref1 = section.lines;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        line = ref1[j];
        for (k = 0, len2 = line.length; k < len2; k++) {
          token = line[k];
          cstring += printToken(token, state);
        }
        cstring += "<br/>";
      }
      cstring += "</div><br/>";
    }
    cstring += "</dl>";
    cstring += "</div></div>";
    canvas.html(cstring);
    return null;
  };

  printToken = function(token, state) {
    var allowable, chString, chord, hasAlts, identifier, num, pString, result, string;
    hasAlts = false;
    if (token.chord.endsWith('\'')) {
      hasAlts = true;
    }
    chord = token.chord == null ? ' ' : token.chord;
    chord = chord.replace('#', '&#x266F;');
    chord = chord.replace('b', '&#x266D;');
    chord = chord.replace(/'/g, '');
    allowable = token.chord.replace(/'/g, '');
    num = token.chord.length - allowable.length;
    identifier = allowable + num;
    string = token.string === '' ? ' ' : token.string.trim();
    pString = 'phrase';
    pString += token.wordExtension ? ' join' : '';
    result = '';
    result += "<p class=\"" + pString + "\">";
    if (state.showChords) {
      chString = 'chord';
      if (state.smartMode) {
        chString += token.exception ? '' : ' mute';
      }
      if (state.showAlts && token.exception && (alts[token.chord] != null)) {
        chString += hasAlts ? ' alts' : '';
      }
      result += "<span class=\"" + chString + "\" data-id-to=\"" + identifier + "\">" + chord + "</span><br/>";
    }
    result += "<span class='string'>" + string + "</span>";
    result += "</p>";
    if (hasAlts && token.exception && state.showAlts && (alts[token.chord] != null)) {
      result += "<span class='sidebar alts' data-id-from=\"" + identifier + "\">";
      result += "<a>" + chord + "</a> â†’ <a>";
      result += alts[token.chord].join('</a>, <a>');
      result += "</a></span><br/>";
    }
    return result;
  };

}).call(this);
